{"version":3,"sources":["UserProvider.tsx","hooks/useCurrentUser.ts","utils/random.ts","utils/getRandomColor.ts","hooks/useYjsAwareness.ts","hooks/useWebRtcProvider.ts","hooks/useObservableListener.ts","FloatingAnnotations.tsx","AnnotationsJSONPrinter.tsx","Editor.tsx","utils/getRandomUserName.ts","App.tsx","index.tsx"],"names":["createContext","id","name","useCurrentUser","useContext","UserProvider","random","array","seed","split","reduce","number","letter","charCodeAt","length","colors","getRandomColor","useYjsAwareness","user","doc","useMemo","awareness","awarenessProtocol","setLocalStateField","color","useWebRtcProvider","documentId","ydoc","Doc","guid","roomName","WebrtcProvider","useEventListener","eventName","handler","observable","savedHandler","useRef","useEffect","current","eventListener","event","on","off","FloatingAnnotations","useState","visible","setVisible","commands","useCommands","getAnnotationsAt","useHelpers","floatingToolbarItems","type","ComponentItem","ToolbarButton","onClick","addAnnotation","uniqueId","icon","label","map","annotation","text","join","positioner","usePositioner","createCenteredAnnotationPositioner","items","placement","style","top","y","height","left","x","position","border","whiteSpace","background","ref","onUpdate","v","backdrop","Button","AnnotationsJSONPrinter","useCurrentSelection","from","to","annotations","getAnnotations","JSON","stringify","TIMEOUT","Math","floor","Status","success","className","Editor","onFetch","onSave","usedFallbackRef","currentUser","provider","clientCount","setClientCount","isSynced","setIsSynced","docState","setDocState","handleChange","useCallback","state","tr","docChanged","toJSON","handleSave","newDocState","getMap","set","Date","now","handleSaveDebounced","useDebouncedCallback","handlePeersChange","webrtcPeers","useObservableListener","handleSynced","synced","handleYDocUpdate","cancel","createExtensions","YjsExtension","getProvider","AnnotationExtension","useRemirror","extensions","manager","getContext","fetchFallback","a","connected","res","setContent","parse","timeoutId","window","setTimeout","clearTimeout","onChange","users","getRandomUserName","api","axios","create","baseURL","headers","App","uuid","handleFetch","get","response","data","body","put","Provider","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.903617b2.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport interface User {\n\tid: string;\n\tname: string;\n}\n\nexport default createContext<User>({\n\tid: 'unknown',\n\tname: 'Unknown User',\n});\n","import { useContext } from 'react';\nimport UserProvider, { User } from '../UserProvider';\n\nfunction useCurrentUser(): User {\n\treturn useContext(UserProvider);\n}\n\nexport default useCurrentUser;\n","// Similar to lodash/sample but with a string seed\nfunction random<T>(array: T[], seed: string): T {\n\t// Sum the ASCII codes of each letter\n\tconst number = seed.split('').reduce((number, letter) => {\n\t\treturn number + letter.charCodeAt(0);\n\t}, 0);\n\t// Get \"random\" index using modulus\n\treturn array[number % array.length];\n}\n\nexport default random;\n","import random from './random';\n\nconst colors = [\n\t'#357a8d',\n\t'#205a6d',\n\t'#86afbb',\n\t'#c2d7dd',\n\t'#bbb350',\n\t'#a29835',\n\t'#d6d196',\n\t'#ec7f48',\n\t'#e35f2e',\n\t'#9973d2',\n\t'#f9d9c8',\n\t'#d1505f',\n\t'#Be3541',\n\t'#e3969f',\n\t'#f1cbcf',\n\t'#8a6a8a',\n\t'#6a4b6a',\n\t'#b9a6b9',\n\t'#dcd2dc',\n\t'#7d916b',\n\t'#5d724c',\n\t'#b1bda6',\n\t'#d8ded3',\n\t'#eacc8a',\n\t'#e0b86a',\n\t'#a1888b',\n\t'#83686b',\n\t'#c7b8b9',\n];\n\nconst getRandomColor = (seed: string): string => {\n\treturn random(colors, seed);\n};\n\nexport default getRandomColor;\n","import { useMemo } from 'react';\nimport { Doc } from 'yjs';\nimport * as awarenessProtocol from 'y-protocols/awareness.js';\nimport getRandomColor from '../utils/getRandomColor';\n\nexport interface User {\n\tname: string;\n\t[x: string]: any;\n}\n\nfunction useYjsAwareness(user: User, doc: Doc): awarenessProtocol.Awareness {\n\treturn useMemo(() => {\n\t\tconst awareness = new awarenessProtocol.Awareness(doc);\n\t\tawareness.setLocalStateField('user', {\n\t\t\tname: user.name,\n\t\t\tcolor: getRandomColor(user.name),\n\t\t});\n\t\treturn awareness;\n\t}, [user.name, doc]);\n}\n\nexport default useYjsAwareness;\n","import { useMemo } from 'react';\nimport { Doc } from 'yjs';\nimport { WebrtcProvider } from 'y-webrtc';\nimport useYjsAwareness, { User } from './useYjsAwareness';\n\nfunction useWebRtcProvider(user: User, documentId: string) {\n\tconst ydoc = useMemo(() => new Doc({ guid: documentId }), [documentId]);\n\tconst awareness = useYjsAwareness(user, ydoc);\n\n\treturn useMemo(() => {\n\t\tconst roomName = `remirror-yjs-webrtc-demo-room-${documentId}`;\n\t\t// @ts-ignore opts param seems to expect ALL options\n\t\treturn new WebrtcProvider(roomName, ydoc, {\n\t\t\tawareness,\n\t\t});\n\t}, [awareness, ydoc, documentId]);\n}\n\nexport default useWebRtcProvider;\n","import { useEffect, useRef } from 'react';\n\ntype Handler = (...args: any) => void;\n\ninterface Observable {\n\ton: (name: string, fn: Handler) => void;\n\toff: (name: string, fn: Handler) => void;\n\t[x: string]: any;\n}\n\nfunction useEventListener(\n\teventName: string,\n\thandler: Handler,\n\tobservable: Observable,\n) {\n\tconst savedHandler = useRef<Handler>();\n\n\tuseEffect(() => {\n\t\tsavedHandler.current = handler;\n\t}, [handler]);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst eventListener = (event: any) => savedHandler.current?.(event);\n\t\t\tobservable.on(eventName, eventListener);\n\t\t\treturn () => {\n\t\t\t\tobservable.off(eventName, eventListener);\n\t\t\t};\n\t\t},\n\t\t[eventName, observable], // Re-run if eventName or observable changes\n\t);\n}\n\nexport default useEventListener;\n","import { useMemo, useState } from 'react';\nimport { uniqueId } from 'remirror';\nimport { createCenteredAnnotationPositioner } from 'remirror/extensions';\nimport {\n\tButton,\n\tComponentItem,\n\tControlledDialogComponent,\n\tFloatingToolbar,\n\tPositionerPortal,\n\tToolbarItemUnion,\n\tuseCommands,\n\tuseHelpers,\n\tusePositioner,\n} from '@remirror/react';\n\nconst FloatingAnnotations = () => {\n\tconst [visible, setVisible] = useState(false);\n\tconst commands = useCommands();\n\tconst { getAnnotationsAt } = useHelpers();\n\tconst floatingToolbarItems = useMemo<ToolbarItemUnion[]>(\n\t\t() => [\n\t\t\t{\n\t\t\t\ttype: ComponentItem.ToolbarButton,\n\t\t\t\tonClick: () => {\n\t\t\t\t\t// setVisible(true);\n\t\t\t\t\tcommands.addAnnotation({ id: uniqueId() });\n\t\t\t\t},\n\t\t\t\ticon: 'chatNewLine',\n\t\t\t},\n\t\t],\n\t\t[commands],\n\t);\n\n\tconst annotations = getAnnotationsAt();\n\tconst label = annotations.map(annotation => annotation.text).join('\\n');\n\tconst positioner = usePositioner(\n\t\tcreateCenteredAnnotationPositioner(getAnnotationsAt),\n\t\t[],\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<FloatingToolbar\n\t\t\t\titems={floatingToolbarItems}\n\t\t\t\tpositioner=\"selection\"\n\t\t\t\tplacement=\"top\"\n\t\t\t/>\n\t\t\t<PositionerPortal>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttop: positioner.y + positioner.height,\n\t\t\t\t\t\tleft: positioner.x,\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\tborder: '1px solid black',\n\t\t\t\t\t\twhiteSpace: 'pre-line',\n\t\t\t\t\t\tbackground: 'white',\n\t\t\t\t\t}}\n\t\t\t\t\tref={positioner.ref}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</div>\n\t\t\t</PositionerPortal>\n\t\t\t<ControlledDialogComponent\n\t\t\t\tvisible={visible}\n\t\t\t\tonUpdate={v => setVisible(v)}\n\t\t\t\tbackdrop={true}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tcommands.addAnnotation({ id: uniqueId() });\n\t\t\t\t\t\tsetVisible(false);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tDone\n\t\t\t\t</Button>\n\t\t\t</ControlledDialogComponent>\n\t\t</>\n\t);\n};\n\nexport default FloatingAnnotations;\n","import { useCurrentSelection, useHelpers } from '@remirror/react';\n\nconst AnnotationsJSONPrinter = () => {\n\tconst { from, to } = useCurrentSelection();\n\tconst { getAnnotations } = useHelpers(true);\n\n\tconst annotations = getAnnotations();\n\n\treturn (\n\t\t<pre>\n\t\t\t<code>\n\t\t\t\tSelection: {from}-{to}\n\t\t\t</code>\n\t\t\t<br />\n\t\t\t<code>{JSON.stringify(annotations, null, 2)}</code>\n\t\t</pre>\n\t);\n};\n\nexport default AnnotationsJSONPrinter;\n","import React, { useRef, useCallback, useState, useEffect } from 'react';\nimport { RemirrorJSON } from 'remirror';\nimport { YjsExtension, AnnotationExtension } from 'remirror/extensions';\nimport {\n\tEditorComponent,\n\tRemirror,\n\tThemeProvider,\n\tuseRemirror,\n} from '@remirror/react';\nimport { ProsemirrorDevTools } from '@remirror/dev';\nimport { useDebouncedCallback } from 'use-debounce';\nimport useCurrentUser from './hooks/useCurrentUser';\nimport useWebRtcProvider from './hooks/useWebRtcProvider';\nimport useObservableListener from './hooks/useObservableListener';\nimport FloatingAnnotations from './FloatingAnnotations';\nimport AnnotationsJSONPrinter from './AnnotationsJSONPrinter';\nimport 'remirror/styles/all.css';\n\ninterface EditorProps {\n\tdocumentId: string;\n\tonFetch: Function;\n\tonSave: Function;\n}\n\nconst TIMEOUT = 3000 + Math.floor(Math.random() * 7000);\n\nconst Status = ({ success = false }) => (\n\t<span className={`status ${success ? 'success' : ''}`}>&nbsp;</span>\n);\n\nfunction Editor({ documentId, onFetch, onSave }: EditorProps) {\n\tconst usedFallbackRef = useRef<boolean>(false);\n\tconst currentUser = useCurrentUser();\n\tconst provider = useWebRtcProvider(currentUser, documentId);\n\n\tconst [clientCount, setClientCount] = useState<number>(0);\n\tconst [isSynced, setIsSynced] = useState<boolean>(false);\n\tconst [docState, setDocState] = useState<RemirrorJSON>();\n\n\tconst handleChange = useCallback(\n\t\t({ state, tr }) => {\n\t\t\tif (tr?.docChanged) {\n\t\t\t\tsetDocState(state.toJSON().doc);\n\t\t\t}\n\t\t},\n\t\t[setDocState],\n\t);\n\n\tconst handleSave = useCallback(\n\t\tnewDocState => {\n\t\t\tif (isSynced || clientCount === 0) {\n\t\t\t\tonSave(documentId, JSON.stringify(newDocState));\n\t\t\t\tconst meta = provider.doc.getMap('meta');\n\t\t\t\tmeta.set('lastSaved', Date.now());\n\t\t\t}\n\t\t},\n\t\t[onSave, documentId, provider.doc, isSynced, clientCount],\n\t);\n\n\tconst handleSaveDebounced = useDebouncedCallback(handleSave, TIMEOUT);\n\n\tconst handlePeersChange = useCallback(\n\t\t({ webrtcPeers }) => {\n\t\t\tsetClientCount(webrtcPeers.length);\n\t\t},\n\t\t[setClientCount],\n\t);\n\n\tuseObservableListener('peers', handlePeersChange, provider);\n\n\tconst handleSynced = useCallback(\n\t\t({ synced }) => {\n\t\t\tsetIsSynced(synced);\n\t\t},\n\t\t[setIsSynced],\n\t);\n\n\tuseObservableListener('synced', handleSynced, provider);\n\n\tuseEffect(() => {\n\t\thandleSaveDebounced(docState);\n\t}, [handleSaveDebounced, docState]);\n\n\tconst handleYDocUpdate = useCallback(() => {\n\t\thandleSaveDebounced.cancel();\n\t}, [handleSaveDebounced]);\n\n\tuseObservableListener('update', handleYDocUpdate, provider.doc);\n\n\tconst createExtensions = useCallback(() => {\n\t\treturn [\n\t\t\tnew YjsExtension({\n\t\t\t\tgetProvider: () => provider,\n\t\t\t}),\n\t\t\tnew AnnotationExtension(),\n\t\t];\n\t}, [provider]);\n\n\tconst { manager, getContext } = useRemirror({\n\t\textensions: createExtensions,\n\t});\n\n\tuseEffect(() => {\n\t\tif (usedFallbackRef.current) return;\n\n\t\tconst fetchFallback = async () => {\n\t\t\tif (provider.connected && clientCount === 0) {\n\t\t\t\tconst res = await onFetch(documentId);\n\t\t\t\tgetContext()?.setContent(JSON.parse(res));\n\t\t\t}\n\t\t\tusedFallbackRef.current = true;\n\t\t};\n\n\t\tconst timeoutId = window.setTimeout(fetchFallback, 1000);\n\n\t\treturn () => {\n\t\t\twindow.clearTimeout(timeoutId);\n\t\t};\n\t}, [onFetch, documentId, provider.connected, clientCount, getContext]);\n\n\treturn (\n\t\t<ThemeProvider>\n\t\t\t<Remirror manager={manager} onChange={handleChange}>\n\t\t\t\t<EditorComponent />\n\t\t\t\t<FloatingAnnotations />\n\t\t\t\t<ProsemirrorDevTools />\n\t\t\t\t<div className=\"info-box\">\n\t\t\t\t\t<p className=\"info\">Connected clients: {clientCount + 1}</p>\n\t\t\t\t\t<p className=\"info\">\n\t\t\t\t\t\tSynced: <Status success={isSynced || clientCount === 0} />\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<AnnotationsJSONPrinter />\n\t\t\t</Remirror>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default Editor;\n","import random from './random';\n\nconst users = [\n\t'Ollie Ewing',\n\t'Charles Hays',\n\t'Jim Bean',\n\t'Richard Reeves',\n\t'Frank Graves',\n\t'Grant Emerson',\n\t'Charles Yates',\n\t'Ian Sims',\n\t'Herbert Warren',\n\t'Martin Noel',\n\t'Billy Long',\n\t'Douglas Giles',\n\t'Stephen Knight',\n\t'Brendan Cook',\n\t'Robert Evans',\n\t'Mathew Richard',\n\t'Drew Chase',\n\t'Adeline Barrera',\n\t'Estelle Turner',\n\t'Velma Beasley',\n\t'Irene Goodwin',\n\t'Jeanette Jones',\n\t'Robin Flowers',\n\t'Pamela Spears',\n\t'Kristin Alford',\n\t'Charlotte Stone',\n\t'Kirsten Turner',\n];\n\nconst getRandomUserName = (seed: string): string => {\n\treturn random(users, seed);\n};\n\nexport default getRandomUserName;\n","import React, { useMemo, useCallback } from 'react';\nimport axios from 'axios';\nimport { v4 as uuid } from 'uuid';\nimport UserProvider, { User } from './UserProvider';\nimport Editor from './Editor';\nimport getRandomUserName from './utils/getRandomUserName';\n\ninterface Document {\n\tbody: string;\n}\n\nconst api = axios.create({\n\tbaseURL: 'https://60b9308780400f00177b6434.mockapi.io/yjs-webrtc/v1/',\n\theaders: { 'Content-Type': 'application/json' },\n});\n\nfunction App() {\n\tconst currentUser: User = useMemo(() => {\n\t\tconst id = uuid();\n\t\treturn {\n\t\t\tid,\n\t\t\tname: getRandomUserName(id),\n\t\t};\n\t}, []);\n\n\tconst handleFetch = useCallback(async id => {\n\t\tconst response = await api.get<Document>(`documents/${id}`);\n\t\treturn response.data.body;\n\t}, []);\n\n\tconst handleSave = useCallback(async (id, body) => {\n\t\tawait api.put(`/documents/${id}`, {\n\t\t\tbody,\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<UserProvider.Provider value={currentUser}>\n\t\t\t<div className=\"app\">\n\t\t\t\t<Editor\n\t\t\t\t\tdocumentId=\"e575831a-e213-49e2-9092-a604d3e0f654\"\n\t\t\t\t\tonFetch={handleFetch}\n\t\t\t\t\tonSave={handleSave}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</UserProvider.Provider>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}